why className instead of class?
	we are writing JSX (Javascript XML) code 
	this will be translated into javascrip code
	in js, "class" is a keyword

	so className is used instead of class in JSX


App component is the parent 
Login component is the child

parent wants to give input to child component

How to give input from parent to child?
	props

props helps the parent component to send input to child component
	
	props are read-only

--------------------
State
------
is used to retain information across function calls within a component
useful for state management

Lets create a component called counter
it should have a button
on clicking the button, it should increment the count

the count should be displayed



Task:
use props and state in a class component





style
className


import { Component } from "react";

export class MyLogin extends Component
{
    constructor()
    {
        super();
        this.state={"username":"", "password":"", "usernameTouched":false, x:"form-control"}
        this.onChangeHandler=this.onChangeHandler.bind(this);
    }

    onChangeHandler(e)
    {
        if(e.target.id=="username")
        {            
            this.setState({'usernameTouched':true})
            if(this.state.username.length<3)
                this.setState({'x':'form-control is-invalid'})
            else
            this.setState({'x':'form-control'})
        }
        this.setState({[e.target.id]:e.target.value});
    }

    render(){
        return <div>
            {this.state.username}<br/>
            {this.state.password}<br/>
            {this.state.usernameTouched}
            <br/>
            { this.state.usernameTouched && this.state.username.length<3 && <div className="text-danger">Username is invalid</div> }
            <br/>
            <p style={{'color':(this.state.username.length<3)?'red':'black'}}>This is a paragraph</p>
            Username:<input type="text" id="username" className={this.state.x} onChange={this.onChangeHandler} />
            Password:<input type="password" id="password" className="form-control" onChange={this.onChangeHandler} />
            <br/>

            <input type="button" value="Login" className="btn btn-primary" />
            <br/><br/>
            <br/>
            <br/>
            <br/>
        </div>
    }
}





Task:

accept 2 numbers input from user using text boxes and bind them to the state

display the sum and product as soon as they type 
and also when you click buttons


Note:
setState is async

so if we use multiple setState in one handler,
they does not happen in current order


so try using Promise.

example for promise:





import { Component } from "react";

export class Maths extends Component
{
    constructor()
    {
        super();
        this.state={"no1":0, "no2":0, "sum":0}
        this.onChangeHandler=this.onChangeHandler.bind(this)
    }

    onChangeHandler(e)
    {
        Promise.resolve()
        .then(()=>this.setState({[e.target.id]:e.target.value}))
        .then(()=>this.setState({'sum':parseInt(this.state.no1)+parseInt(this.state.no2)}))
    }

    render(){
        return <div>
            {JSON.stringify(this.state)}
            <br/>
            Number 1: <input type="number" id="no1" className="form-control" onKeyUp={this.onChangeHandler}  />
            Number 2: <input type="number" id="no2" className="form-control" onKeyUp={this.onChangeHandler} />
            <br/>
            <input type="button" className="btn btn-primary" id="btnAdd" value="Add" />
        </div>
    }
}

--------------------------------------------------------------
==================================
Functional Components
--------------------------
1) function
2) arrow function


1) function:-
function Login()
{
	return <div>	</div>
}

export default Login();



--------------------------
2) arrow function:-

var Login=()=><div>	<div>

or

var Login=()=>{
	return <div>	</div>
}


Differences between class and functional components:
--------------------------------------------------------------
in class component

class Login extends Component
{
	constructor(props)
	{
		super(props);
	}
}

in functional component


function Login(props)
{
	return <div>	</div>
}


or

var Login=(props)=><div>	<div>






syntax for state is different from class and functional component

in class component:

	this.state={"username":"raja",	"password":"raja@123"};


in functional component:
we will use 
	useState hook

the same username and password in functional component:

	const [username, setUsername]= useState("raja");
	const [password, setPassword]= useState("raja@123");



-------------
Task:
create functional component &| arrow functional component
for

Login
	username
	password




    function onChangeHandler(e)
    {
        switch(e.target.id)
        {
            case "no1":
                setNo1((x)=>{
                    setSum(e.target.value+no2);
                    return e.target.value;                    
                })
                
                break;
            case "no2":
                setNo2((x)=>{
                    setSum(e.target.value+no1);
                    return e.target.value;
                })
                break;
        }
--------------------------------------------
solution for adding no1 and no2 sync:

import { useState } from "react";

const Maths=()=>{
    const [no1, setNo1]=useState(0);
    const [no2, setNo2]=useState(0);
    const [sum, setSum]=useState(0);

    function onChangeHandler(e)
    {
        var value=e.target.value;
        switch(e.target.id)
        {
            case "no1":
                setNo1((x)=>{
                    setSum(parseInt(value)+parseInt(no2));
                    return value;
                })
                break;
            case "no2":
                setNo2((x)=>{
                    setSum(parseInt(value)+parseInt(no1));
                    return value;
                })
                break;
        }
    }
    

    return <div>
        {no1}<br/>
        {no2}<br/>
        {sum}
        <br/>
        Number 1:<input type="number" id="no1" onChange={onChangeHandler} /><br/>
        Number 2:<input type="number" id="no2" onChange={onChangeHandler}  /><br/>
        
    </div>
}

export default Maths;

---------------------------------------------------
What is JSX?
	
https://www.w3schools.com/react/react_jsx.asp



css colors:
	named colors
		red
	rgba
		rgb()
		rgba()

	color code in hexa decimal
		#00 00 00 		black
		#ff ff ff			white





----------------------
<input type="range" min="0" max="255" />

keep 3 sliders for red, green, blue

<div style={{'background-color':`rgb(${red},${green},${blue})`}}>


