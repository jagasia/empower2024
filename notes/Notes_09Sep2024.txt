RESTful web services (REST api)

>	&gt;
<	&lt;
==	eq


&nbsp;			entities in a markup language


Spring Security
-----------------
	authentication		validates the user's identity.		whether they are a valid user or not
	encryption
	authorization		whether this user, has access a resource or not


/admin/home			who is allowed to access? 	all users, who have admin role
/user/home			who is allowed?		all users, whose role is user

/admin/**


Demo:

in a spring boot app, if you add the following dependency,
	spring boot starter security

1) create a spring boot app
	09-sep-security-1

		spring web
		spring data jpa
		oracle driver
		spring security



2) we have a controller 
	/home
	/admin/home
	/user/home


3) a password is generated in console (that changes every time we restart)

when we access any url
	login page
		user
		<<generated pwd copied from console>>

after login, we are able to access any url


4) how can i change the username and password of my choice?
	




------------------------------------------------
How am i going to provide access to role based access RBA





User
UserDetails
UserDetailsService




https://bcrypt-generator.com/#google_vignette



Task:
-------
1) add spring security dependency
	use generated password

2) application.properties
	spring.security.user.name=
	spring.security.user.password=

3) Configuration class
refer to my code

-------------------------------------------------------


class University
{
	List<College> colleges;
}

class College
{
	String name;
	String founder;
	University university;
}



OneToOne
OneToMany
ManyToOne
ManyToMany



Employee
Department


dependency for swagger
-------------------------------

------------------------------
Steps for swagger:
	1) add the following dependency in pom.xml
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.2</version>
		</dependency>

	2) after running the project
		go to base url (do not include any controller url)
			http://localhost:5001/swagger-ui/index.html

/swagger-ui/index.html		is the url
	note, we do not mention any controller url because, 
	this URL will show all controllers in the browser

--------------------------------------------
there are some finder methods 
		findById		is readymade		find by primary key
		findBy<<property>>

	
suppose Entity is Employee
	id
	name
	department
	salary
	dob
	city

		findAll()		readymade
		findById()	readymade
		findBySalary
		findByDob
		findByCity

	
for the above methods, we can define them in repository interface



How to write queries in jpa?
	most of the common requirements like
		SELECT all
		SELECT by primary key
		


Problem:
------------
stack overflow when
	employee has department
	department has employees

Solution:
------------
@JsonIgnore
	ignores a property when json is generated



Task:
University
College


University
	id
	name
	List<College> colleges;


College
	id
	name
	city
	university


use @OneToMany in University
and @ManyToOne in College

use swagger and add lot of colleges and atleast 2 universities



@SpringBootApplication(exclude = SecurityAutoConfiguration.class)

	localhost:5000/swagger-ui/index.html

---------------------------------------------------------
After break:-	JPA Query Language


EJBQL
JPAQL
HQL

SELECT * FROM Employee e	(SQL)
SELECT e FROM Employee e	(JPAQL)
	same can be done as
from Employee e		(JPAQL)




