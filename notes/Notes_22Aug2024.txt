
CREATE TABLE PRODUCT1
(
ID INT PRIMARY KEY,
NAME VARCHAR2(50),
STOCK INT
);


CREATE TABLE SALES1
(
ID INT PRIMARY KEY,
PID INT,
QTY INT
);

CREATE OR REPLACE TRIGGER TRGJAG1
AFTER INSERT ON SALES1
FOR EACH ROW
BEGIN
    UPDATE PRODUCT1 SET STOCK=STOCK-:new.QTY 
    WHERE ID=:new.PID;
    DBMS_OUTPUT.PUT_LINE('Product stock is updated now...');
END;

//The above trigger will now be modified to check if sufficient stock available, before allowing sales.


CREATE OR REPLACE TRIGGER TRGJAG1
BEFORE INSERT ON SALES1
FOR EACH ROW
BEGIN

    UPDATE PRODUCT1 SET STOCK=STOCK-:new.QTY 
    WHERE ID=:new.PID;
    DBMS_OUTPUT.PUT_LINE('Product stock is updated now...');
END;


CREATE OR REPLACE TRIGGER TRGJAG1
BEFORE INSERT ON SALES1
FOR EACH ROW
DECLARE
STK INT;
BEGIN
    SELECT STOCK INTO STK FROM PRODUCT1 WHERE ID=:NEW.PID;
    IF STK<:NEW.QTY THEN
      RAISE_APPLICATION_ERROR (-20001, 'There is no enough stock to sell this much quantity');
    END IF;

    UPDATE PRODUCT1 SET STOCK=STOCK-:new.QTY 
    WHERE ID=:new.PID;
    DBMS_OUTPUT.PUT_LINE('Product stock is updated now...');
END;

DECLARE
   NO_STOCK EXCEPTION;
   PRAGMA EXCEPTION_INIT(NO_STOCK, -20001);
BEGIN
   INSERT INTO SALES1 VALUES (113, 1, 100);
EXCEPTION
  WHEN NO_STOCK THEN
   DBMS_OUTPUT.PUT_LINE('Stock is lesser than required quantity');
END;
---------------------------------------------------
Java
--------
How to check java installed version in our computer?
in cmd:
	java -version
java version "21.0.2" 2024-01-16 LTS
Java(TM) SE Runtime Environment (build 21.0.2+13-LTS-58)
Java HotSpot(TM) 64-Bit Server VM (build 21.0.2+13-LTS-58, mixed mode, sharing)

java compilation 
	i) java compiler (javac) translates java code into byte code
	ii) at runtime, java runtime environment has another compiler called JIT (Just In Time) compiler
		that will convert byte code into machine specific machine language code
----------------------
Data types
--------------
There are 8 data types in java.

data type = primitive data type only

all others are "types"

those 8 data types are:
	byte
	short
	int
	long
-----------------the above are integer family----------------------------
	boolean
--------------the above is boolean------------
	char
-----------the above is character-------------
	double
	float
------------the above are floating point numbers----------------like		1.2		


Activity:
idenfiy the range of each datatype in java
ex:
	byte		-128	to	127



public class App
{
	public static void main(String []jags)
	{
		byte marks=127;
		marks+=1;
		//byte ranges from -128 to 127
		System.out.println(marks);
	}
}

public class App
{
	public static void main(String []jags)
	{
		int i=010;	//OCTAL		8
		System.out.println(i);
	}
}




public class App
{
	public static void main(String []jags)
	{
		int i=0xA;		//Hexa decimal 10
		System.out.println(i);
	}
}

public class App
{
	public static void main(String []jags)
	{
		System.out.println(Long.MIN_VALUE);
	}
}



Data type ranges
----------------------
byte	1 byte	(8 bit)		-128			to	127
short	2 bytes	(16 bit)		-32768			to	-32767
int	4 bytes 	(32 bit)		-2,14,74,83,648		to	2,14,74,83,647
long	8 bytes	(64 bit)		-9,223,372,036,854,775,808 	to 	9,223,372,036,854,775,807
float	4 bytes
double	8 bytes
char	2 bytes
boolean 	1 bit

IDE	-	Integrated Development Environment
we can use the following IDEs to write, build, debug java codes
	Netbeans
	Eclipse
	Spring Tool Suite
	IntelliJ
	Visual Studio Code
	etc



Now, you have opened "Spring Tool Suite" in your system,
and chosen the workspace location.

Now lets create a java project.

File -> New -> Java Project
	name:	22-aug-01
	execution environment:	Java SE 17

	Finish

Right click the project and create 
	new Class
class name:	App
tick the checkbox for public static void main

	Finish

inside main method:
	System.out.println("Hello world");
this can be done by short cut also using:
	syso	ctrl+space		enter

To run the program:
	ctrl + F11
in some computer, F11 needs 	Function button +F11
	it ask you to choose:		Java Application


Java Language features:
---------------------------------
if
if else
if else if else
switch case
while loop
do while loop
for loop
for each		for arrays and collections

Task:
identify the operators used in java language


in c, c++ language, the following is allowed
	int i=0;
	if(i)
		//true portion
	else
		//false portion

But IN JAVA, THE ABOVE IS NOT ALLOWED
if statement requires a valid boolean expression that returns true or false

	0 is not considered as false in java




when you write conditions for if
you can use operators
	i>20

Task:
identify the operators used in java language


How to get input from the user?
	Scanner class belongs to java.util package
	so we import 
		import java.util.Scanner;














Dice Game I

Each player will be allowed to throw  a dice 2 times. The points for each player will be calculated as follows :
If the values thrown are different, the points scored is equal to the sum of the 2 values.
If the values thrown are the same, the points scored is equal to double the sum of the 2 values.

Write a program to calculate the points scored by a player.

Input and Output Format:

Input consists of 2 integers. The valid range of inputs is from 0 to 6. [ Both 0 and 6 inclusive]
Output the points scored. In case of invalid inputs, print “Invalid Input”.

Refer sample input and output for formatting specificaions.

[All text in bold corresponds to input and the rest corresponds to output.]
Sample Input and Output 1:

Enter Value 1:
5
Enter Value 2:
6
The points scored is 11

Sample Input and Output 2:

Enter Value 1:
5
Enter Value 2:
5
The points scored is  20

Sample Input and Output 3:

Enter Value 1:
8
Enter Value 2:
6
Invalid Input 


Pending:
class, method, variable, constant, package conventions
Scanner methods
	Scanner class provides lot of methods including
		nextInt
		nextLine
		nextLong
		nextFloat
		nextDouble
		nextBoolean
		next

Scanner sc=new Scanner(System.in);

among these methods,
	nextLine() is the only method that accepts input until "newline" character is found.	(return/ enter button)
	all other methods of Scanner, accepts input until any delimiter is found


what is a delimiter?
	if your input is
		1 2	3
		4
between 1 and 2, what is the delimiter?
	space

between 2 and 3?
	tab
between 3 and 4
	newline


Task:
Accept rollno, name and salary as input
and print the same.

sample input:
121
Nithin B S
10000


How can you get input from the user as a character input?

	sc.next().charAt(0);

lets decode this
	sc.next()	returns a String.		String class has instance methods like charAt(index) to retrieve a character at a particular index

old:
-----
String str=sc.next();
char c=str.charAt(0);

new:
-------
the above 2 lines are shortened as:
	char c=sc.next().charAt(0);



Solution for Dice 1:
-------------------------
import java.util.Scanner;

public class Dice1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int no1=sc.nextInt();
		int no2=sc.nextInt();
		
		if(no1<0 || no2<0 || no1>6 || no2>6)
		{
			System.out.println("Invalid Input");
			System.exit(0); 	//stop execution
		}
		
		int result=no1+no2;
		if(no1==no2)
		{
			result*=2;
		}
		System.out.println("The points scored is "+result);
	}

}


Dice Game II
Each player will be allowed to throw a dice 2 times. The points for each player will be calculated as follows :
The points scored is the absolute difference between 8 and the sum of the 2 values, provided the sum of the 2 values is less than 8.
In all other cases, the point  scored is double the absolute difference between 8 and the sum of the 2 values.

Write a program to calculate the points scored by a player.

Input and Output Format:
Input consists of 2 integers. The valid range of inputs is from 0 to 6.
Output the points scored. In case of invalid inputs, print “Invalid Input”.

Refer sample input and output for formatting specificaions.

[All text in bold corresponds to input and the rest corresponds to output.]
Sample Input and Output 1:

Enter Value 1:
5
Enter Value 2:
6
The points scored is 6

Sample Input and Output 2:

Enter Value 1:
3
Enter Value 2:
2
The points scored is  3

Sample Input and Output 3:

Enter Value 1:
8
Enter Value 2:
6
Invalid Input 
 
Introductory Algebra I
One of the assignments given to the kids in the Introductory Algebra class is to write one 2-digit positive number and one 2-digit negative number. They can write the numbers in any order.
All the kids have written 2 numbers each.
Can you write a program to ease out the teacher's task?

Input and Output Format:

Input consists of 2 integers. A valid input should contain only 2 digits. If any of the integers is not a 2-digit number, then the input is invalid.

Output is a string.  Output is either “Correct” or “Incorrect” or “Invalid Input”.

Refer sample input and output for formatting specificaions.

[All text in bold corresponds to input and the rest corresponds to output.]

Sample Input and Output 1:

Enter Value 1:
-51
Enter Value 2:
60
Correct

Sample Input and Output 2:

Enter Value 1:
31
Enter Value 2:
35
Incorrect

Sample Input and Output 3:

Enter Value 1:
3
Enter Value 2:
-35
Invalid Input 


import java.util.Scanner;

public class IntroAlgebra1 {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		System.out.println("Enter Value 1:");
		int input1=sc.nextInt();
		System.out.println("Enter Value 2:");
		int input2=sc.nextInt();
		
		if(Math.abs(input1)<10 || Math.abs(input2)<10 || Math.abs(input1)>99 || Math.abs(input2)>99)
		{
			System.out.println("Invalid Input");
			System.exit(0);
		}
		
		boolean check1=input1<10;
		boolean check2=input2<10;
		
//		if(check1 ^ check2)
//		{
//			System.out.println("Correct");
//		}else
//		{
//			System.out.println("Incorrect");
//		}
		
		System.out.println((check1 ^ check2)?"Correct":"Incorrect");
	}

}
--------------------------------------
Conventions to be followed while naming
	package
	class
	variable
	method
	constant
	
package 
	is a group of classes and interfaces
	name of the package must be in small letters only

class
	a class is an user defined type
	or a container for a program that contains methods and data members
	class name
		must start with upper case only
		must be a noun	(not verb)
		multiple words can be identified by each word starting in upper case 
			ex:	ArrayIndexOutOfBoundsException
variable
	first letter is in lower case
		ex:		noOfEmployees
constant
	all UPPER case separated by _
	ex:		MAX_VALUE
			MIN_VALUE
	in java, constants are created using "final"
		final int MAX_VALUE=20;
		final String COMPANY_NAME="EMPOWER";

method
	method names must be a combination of "verb" and "noun"
	ex:
		calculateSimpleInterest	
	it sounds like 	doThis

Conclusion:
	if condition can be used in the following ways:
		nested if
		if with logical operators

simple if can be done using tenary operator also.

if(true)
{
	//statement 1
	//statement 2
}


	int i=0;
	String name="";




1) every variable declared, must be initialized
2) unused variables must be removed
3) if true part and else part shall have {} even if there is a single statement
4) comments
	//	single line comment
	/*	multi line
		comment
			*/	


Good comment:
	a good comment will describe the following code
	a bad comment is any java code, which is striked out. They must be removed instead of commented out.
5) functions must return only once
	if(true)
		return something
	else
		return something

instead of this
	x="something"
	if(true)
		x="value";
	else
		x="different value";

	return x;



--------------------------------
switch case
import java.util.Scanner;

public class SwitchDemo {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		char input=sc.next().toUpperCase().charAt(0);
		switch(input)
		{
		case 'A':
		case 'E':
		case 'I':
		case 'O':
		case 'U':
			System.out.println("Vowel");
			break;
		default:
			System.out.println("Not vowel");
			break;
		}
	}

}







import java.util.Scanner;

public class SwitchDemo {

	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		char input=sc.next().charAt(0);
		switch(input)
		{
		case 'A':
			System.out.println("Excellent");
			break;
		case 'B':
			System.out.println("Good");
			break;
		case 'C':
			System.out.println("OK");
			break;
		case 'D':
			System.out.println("Poor");
			break;
		default:
			System.out.println("Invalid");
			break;
		}
	}

}







------------------------
loops
	while loop
	do while loop
	for loop
	for each 		(arrays and collections)


what is the difference between while and do while?
	while loop uses entry condition to enter the loop and to repeat the loop
	do while loop uses exit condition to exit or repeat the loop.

while(condition)
{
}

do
{
}while(condition);

------------------------------
String
-------
what is String?
	String is a class in java.lang package
	is used to store lot of characters

String str="hello world";

	
identify methods of String class
	length()		returns the number of characters present in the String variable
	charAt(index)	returns the character present at the specified index
	substring()
	replace()
	equals()
	isEmpty()
	toUpperCase()
	toLowerCase()
	toCharArray()


when should i use 
	==
	equals()


a==b
	a and b are called as operands
	== compares the values of a and be if 	a and b are value types (primitive)
	== compares the references of a and b if	a and b are reference types (objects)

a=20
	a is a locker,
	open the locker, what you see,
	you see 20 in that


String a="hello world";
	a is not a value type


Stack =	Last In First Out


Array
	is a data structure
	when we want to store multiple values in same name but different index

in c, c++
array syntax is different

in java,
arrays are
	declared
	initialized




Lucky Prize IV 
In all the theatres in the Amphi Multiplex, prizes will be given to few lucky winners every day.
The lucky winners will be decided based on the ticket number and the criteria set for that day.
The criteria set for day 4 is that prizes will be given to all ticket holders whose ticket number satisy both the conditions given below :
1.	The ticket number is a palindrome
2.	The sum of the digits in the ticket number is even 
Given a ticket number, write a program to determine whether that ticket holder will be a lucky prize winner or not.
Input and Output Format:
Input consists of an integer that corresponds to the ticket number.
Output consists of a string that is either “Winner” or “Not a winner”

Sample Input 1:
525 
Sample Output 1:
Winner

Sample Input 2:
7896
Sample Output 2:
Not a winner


import java.util.Scanner;

public class LuckyPrice4 {

	private static boolean isPalindrome(int num)
	{
		int reverse=0;
		int original=num;
		String revStr="";
		while(num>0)
		{
			int lastDigit=num%10;
			revStr=revStr+lastDigit;
			num/=10;
		}
		reverse=Integer.parseInt(revStr);
		
		return original==reverse;
	}
	
	private static int digitSum(int num)
	{
		int sum=0;
		while(num>0)
		{
			int digit=num%10;
			num/=10;
			sum+=digit;
		}
		return sum;
	}
	public static void main(String[] args) {
		Scanner sc=new Scanner(System.in);
		int input=sc.nextInt();
		
		if(isPalindrome(input) && digitSum(input)%2==0)
		{
			System.out.println("Winner");
		}else
		{
			System.out.println("Not a winner");
		}
	}

}




SELECT C.CUSTID, C.FNAME, C.CITY, B.BCITY
FROM CUSTOMER C JOIN ACCOUNT A
ON C.CUSTID=A.CUSTID
JOIN BRANCH B
ON B.BID=A.BID
WHERE C.CITY!=B.BCITY;