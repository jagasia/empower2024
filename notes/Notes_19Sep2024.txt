we need to install routing
	npm i react-router-dom

Routes
	we need to define the routes
	the placeholder where we need to render a component,		<Routes>
	there itself we define the routes				<Route
		path		=>	Component/ Element


For example:
	lets create 3 components
			home
			about
			contact
			login
			signup
			logout



<Routes>
          <Route path='/' Component={Home } />
          <Route path='/about' element={<About />} />
          <Route path='/contact' Component={Contact} />
          <Route path='/login' Component={Login} />
          <Route path='/signup' Component={Signup} />
          <Route path='/logout' Component={Logout} />
        </Routes>




Task:
Create few components and provide hyperlink using navbar
define the routes

conver the <App> in index.js using
<BrowserRouter>

--------------------------------------------------------------------------
redirect using javascript code

if condition is true, then redirect to another component

while redirecting, we can pass some parameters as input to next component



import React, { useState } from 'react';
import { useNavigate } from 'react-router-dom';

const Login = () => {
    const [username, setUsername]=useState('');
    const [password, setPassword]=useState('');
    const [message, setMessage]=useState('');

    const navigate=useNavigate();

    function fnLogin()
    {
        if(username==password)
        {
            //success
            setMessage('');
            //redirect to home page
            var obj={};
            obj.name=username;
            obj.role="admin"
            navigate("/",{state:obj})
        }else{
            //failure
            setMessage("Login failed");
        }
    }
    
  return (
    <div>
        <form>
            Username:<input type="text" id="username" className='form-control' onChange={(e)=>setUsername(e.target.value)} />
            Password:<input type="password" id="password" className='form-control' onChange={(e)=>setPassword(e.target.value)} />
            <br/>
            <input type="button" className='btn btn-secondary' value="Login" onClick={fnLogin} />
            <br/>
            <p className='text-danger'>{message}</p>
        </form>
    </div>
  )
}

export default Login











import React, { useEffect, useState } from 'react';
import { useLocation } from 'react-router-dom';

const Home = () => {

    const [obj, setObj]=useState({});
    const location=useLocation();

    useEffect(()=>{
        setObj(location.state)
    },null)

  return (
    <div>
            <div>Home....</div>
            <div>Welcome {obj.name} ! You are {obj.role}</div>
    </div>
  )
}

export default Home


---------------------------------------------------------------
---------------------------------------------------------------
Formik Yup
	validations

install formik
	npm i formik

	npm i yup


to get values from formik, use
	formik.values

touched works only if onblur is handled



import { useFormik } from 'formik';
import React from 'react';
import * as Yup from 'yup';

const Signup2 = () => {
  const formik=useFormik({
    initialValues:{username:'',password:'',cpassword:'', email:''},
    validationSchema:Yup.object({
        username:Yup.string().required("username is mandatory").min(6,"Username must be atleast 6 characters"),
        password:Yup.string().required("Password is mandatory"),
        cpassword:Yup.string().required("cPassword is mandatory"),
        email:Yup.string().email("Invalid email").required("Email is mandatory")
    })
},);

function onButtonClick()
{
  console.log(formik)
}

  return (
    <div>

      <h3>Signup form 2</h3>
      <br/>
      Username:<input type="text" className={`form-control ${formik.errors.username && 'is-invalid'}`} id='username' onChange={formik.handleChange} />
      {formik.errors.username && <p className='text-danger'>{formik.errors.username}</p>  }
      Password:<input type="text" className={`form-control ${formik.errors.password && 'is-invalid'}`} id='password' onChange={formik.handleChange} />
      {formik.errors.password && <p className='text-danger'>{formik.errors.password}</p>  }
      Confirm Password:<input type="text" className={`form-control ${formik.errors.cpassword && 'is-invalid'}`} id='cpassword' onChange={formik.handleChange} />
      {formik.errors.cpassword && <p className='text-danger'>{formik.errors.cpassword}</p>  }
      Email:<input type="email" className={`form-control ${formik.errors.email && formik.touched.email && 'is-invalid'}`} id='email' onChange={formik.handleChange} onBlur={formik.handleBlur} />
      {formik.errors.email && formik.touched.email && <p className='text-danger'>{formik.errors.email}</p>  }
      <input type="button" className={`btn btn-primary`} value="Sign up" onClick={onButtonClick} disabled={!(formik.dirty && formik.isValid)} />
    </div>
  )
}

export default Signup2