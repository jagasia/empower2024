Swagger & RAML
---------------------
ReSTful Api Modelling Language
------------------------
Yesterday, we implemented spring security 
and allowed users to login using a default login page provided by the spring security.
But, in our project, we are not going to use browser to access our rest api


JWT
	JSON Web Token

is an encrypted string (long string)

JJWT dependency which can be added to our pom.xml

1) jwt filter
	we need to configure this filter and include this in the spring security configuration
	this filter will look for a header in each request (that is configured to be authenciated)
		what header?	Authorization header

2) jwt util
	this class provides all methods related to 
		generate token
		decode the token to get user identity
		specify token validity period
		secret key





http://localhost:8080/user?username=raja&password=raja@123
					this is @RequestParam

http://localhost:8080/user/raja/raja@123
user/{username}/{password}		this is @PathVariable


we will not use above techniques to send password
we should send by @RequestBody

{
  "username":"raja",
  "password":"raja@123"
}


if you  want to send username and password like above,
then we should have a type that has only these 2


we create a class called "AuthRequest"





Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhbmtpdCIsImlhdCI6MTcyNTk0NTUyMCwiZXhwIjoxNzI1OTQ3MzIwfQ.T89B4I_nFZbtbQs7EvWAhjrY9y8jlxXX2c42V5FmHlk





Bearer eyJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJhcnlhbiIsImlhdCI6MTcyNTk0NTg2NCwiZXhwIjoxNzI1OTQ3NjY0fQ.YlhAPRxr2jIZ6y4V1vTeVDOWg1iWqQG-iw7HUu2HqL8




https://github.com/jagasia/spring-boot-3-security-jwt



Add the @AuthenticationPrincipal argument to get the logged in user details:-
--------------------------------------------------------------------------------------------

    @GetMapping("/admin/adminProfile")
    @PreAuthorize("hasAuthority('ROLE_ADMIN')")
    public String adminProfile(@AuthenticationPrincipal UserInfoDetails user) {
        return "Welcome to Admin Profile.. You are "+user.getUsername();
    }


----------------------------------------
How to access a rest api from another rest api?
	i) Feign client
	ii) RestTemplate 	(only from spring boot)



Feign client demo
---------------
1) rest api for College

2) rest api to call the college rest api



feign client steps:
---------------------
1) add open feign dependency

2) enable feign clients

3) create an interface of the rest api that you want to access
	we want to access college-rest-api


	package com.empower.demo.api;

import java.util.List;

import org.springframework.cloud.openfeign.FeignClient;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;

import com.empower.demo.entity.College;

@FeignClient(name = "college-api", url = "http://localhost:8081/college")
public interface CollegeApi {
	@PostMapping
	public College create(@RequestBody College college);
	
	@GetMapping
	public List<College> read();
	
	@GetMapping("/{id}")
	public College read(@PathVariable("id")Integer id);
	
	@PutMapping
	public College update(@RequestBody College college);
	
	@DeleteMapping("/{id}")
	public College delete(@PathVariable("id")Integer id);
}


4) lets create our controller in this project
package com.empower.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.empower.demo.api.CollegeApi;
import com.empower.demo.entity.College;

@RestController
@RequestMapping("/client")
public class MyController {
	@Autowired
	private CollegeApi api;
	
	
	@GetMapping("/all")
	public List<College> getAllColleges()
	{
		List<College> list = api.read();
		return list;
	}
	
}



----------------------------------

RestTemplate demo
----------------------
