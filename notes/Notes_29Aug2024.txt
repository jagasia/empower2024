hostname:	it can be ip address or machine name
port:		normally it is 1521
username:	
password:
SID or service name:	



CREATE TABLE in oracle with prefix
	JAG_EMPLOYEE

ID
NAME
DEPARTMENT
SALARY



INSERT Lot of records for practise

---------------------------------------------------------------------------------------------------------------
JDBC
	Java Database Connectivity

This is an API, that allows java programs to connect with RDBMS

How is it possible?
	Java provides some interfaces,
		the database vendors provide the implementation of those interfaces


jar	java archive
war	web archive
ear	enterprise archive


jar	

every RDBMS vendor provides .jar files for jdbc
Oracle
	ojdbc.jar

we need to add this jar to the classpath of the project
	1) copy the jar file to your project folder
	2) right click project -> properties -> java build path -> libraries tab -> click classpath -> Add external jar button -> locate the jar -> Apply


in my laptop,
	i access oracle using any client (like sql developer, etc) using the following details

		host:	localhost		127.0.0.1
		port:	1521
		username:	hr
		password:	hr
		sid:		xe


Steps for jdbc to access a database
----------------------------
1) add ojdbc8.jar to the classpath of the project
	i have copied jar to bin folder of my project
	
2) load the driver	(now a days, it is not necessary)
3) get connection by providing the URL, username, password
	url:	jdbc:oracle:thin:@localhost:1521:xe
4) connection object is used to work with the database





import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class App {

	public static void main(String[] args) throws SQLException {
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery("SELECT * FROM EMPLOYEES");
		while(rs.next())
		{
			System.out.println(rs.getString("first_name"));
		}
		System.out.println("Hello world");
	}

}


-------------------
Task:
write a java program to connect with oracle
with your oracle credentials:

1) create a java project
2) add ojdbc8.jar to class path
3) write code and run



		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		System.out.println("Hello world");

	

---------------
scripts to create tables and insert rows:
----------------------------------------------
https://github.com/jagasia/empower2024/

	create_table_script.txt
	insert_rows_script.txt

refer to these files
run these scripts in sql developer


----------------------------------------------------
The type of statements:
	Statement
	PreparedStatement
	CallableStatement


Statement
	can be used for simple sql statements that does not require parameters

PreparedStatement
	accepts parameters at runtime
	addresses sql injection

CallableStatement
	used to access stored procedures or functions (PL/SQL)

----------------------------------------------------------------
To execute
	
	executeQuery()
		SELECT statements that returns result set

	executeUpdate()
		execute DML statements that returns the no of rows affected

	execute()
		it is a void statement
		for any sql statement

-------------------------------------------------------------------------------
		




select * from user_master where username='idontknow' or 1=1 --' and password='idontcare'





idontknow' or 1=1 --
idontcare


this is called as sql injection



Statement example:
--------------------------
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class App {

	public static void main(String[] args) throws SQLException {
		Scanner sc=new Scanner(System.in);
		String username=sc.nextLine();
		String password=sc.nextLine();
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		Statement st = con.createStatement();
		String sql="select * from user_master where username='"+username+"' and password='"+password+"'";
		ResultSet rs = st.executeQuery(sql);
		if(rs.next())
		{
			System.out.println("Login is successful");
		}else
		{
			System.out.println("Login is failure");
		}
	}

}












PreparedStatement example:
----------------------------------
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class App2 {

	public static void main(String[] args) throws SQLException {
		Scanner sc=new Scanner(System.in);
		String username=sc.nextLine();
		String password=sc.nextLine();
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		PreparedStatement st = con.prepareStatement("SELECT * FROM USER_MASTER WHERE USERNAME=? AND PASSWORD=?");
		st.setString(1, username);
		st.setString(2, password);
		ResultSet rs = st.executeQuery();
		if(rs.next())
		{
			System.out.println("Login is successful");
		}else
		{
			System.out.println("Login is failure");
		}
	}

}









----------------------------------------------------
Task:
------
Create a java program to retrieve rows from 
	jag_departments table

display the output


example code:

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

public class App {

	public static void main(String[] args) throws SQLException {
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		Statement st = con.createStatement();
		ResultSet rs = st.executeQuery("SELECT * FROM EMPLOYEES");
		while(rs.next())
		{
			System.out.println(rs.getString(1));
		}
		System.out.println("Hello world");
	}

}







display department table records:
----------------------------------------
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Scanner;

public class App3 {

	public static void main(String[] args) throws SQLException {
		Scanner sc=new Scanner(System.in);
		Connection con = DriverManager.getConnection("jdbc:oracle:thin:@localhost:1521:xe","hr","hr");
		PreparedStatement st = con.prepareStatement("SELECT * FROM DEPARTMENTS");
		
		ResultSet rs = st.executeQuery();
		System.out.printf("%-3s\t%-20s\t%-3s\t%-3s\n","Id","Name","Manager","Location");
		while(rs.next())
		{
			System.out.printf("%-3s\t%-20s\t%-3s\t%-3s\n",rs.getInt(1),rs.getString(2),rs.getInt(3),rs.getInt(4));
		}
	}

}

-----------------------------------------
CUSTOMER entity
	
customer table
	id
	name
	dob
	address
	phone


DAO	-	Data Access Objects


CustomerDao	interface
CustomerDaoImpl	class	that implements CustomerDao interface





Product.java		entity
	private data members
	constructors		
	getters and setters
	toString


ProductDao.java
	interface
		declaration of methods only
	
ProductDaoImpl.java
	implementation of the methods
	

	Create		an entity is being created		INSERT statement
	Read						SELECT
	Update						UPDATE
	Delete						DELETE

CRUD


dEMO:
-----------
Product is the entity
	id
	name
	price
	category


	



CREATE TABLE JAG_PRODUCT 
(
id int primary key,
name varchar2(50) not null,
description varchar2(200),
price number(10,2)
);



CREATE TABLE JAG_CUSTOMER
(
	id int primary key,
	name varchar2(50) not null,
	dob date,
	address varchar2(100),
	phone varchar2(15)
);