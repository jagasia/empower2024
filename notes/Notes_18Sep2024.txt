AXIOS
-------
1) simple crud
2) jwt

Demo:
1) create a reactjs application


Activity:
identify the reactjs functional component hooks

useState()	hook
useEffect()	hook





Access to XMLHttpRequest at 'http://localhost:5001/product' from origin 'http://localhost:3000' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.

CORS
	Cross Origin Resource Sharing


        <form className="container">
            Id:<input type="number" className="form-control" id="id" />
            Name:
            Category:
            Price:
            <br/>
        </form>


------------------
Spring email
---------------

1) create one gmail account for sending emails from your apps.
2) go to gmail settings to enable app access
	Manage your account
		search for "App passwords"



App name: 	empower-demo-2024
app password:	





-----------------------------coding
add the following dependency in pom.xml
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-mail</artifactId>
		</dependency>

this can be added while creating the project also

spring.application.name=dummy2
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=jag.javaprogram@gmail.com
spring.mail.password=yeexhrtxbnxxvzsy
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

server.port=6001






package com.empower.demo.email;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.mail.SimpleMailMessage;
import org.springframework.mail.javamail.JavaMailSender;
import org.springframework.stereotype.Component;

@Component
public class EmailSender {
	@Autowired
	private JavaMailSender emailSender;
	
    public void sendSimpleMessage(
    	      String to, String subject, String text) {
    	        
    	        SimpleMailMessage message = new SimpleMailMessage(); 
    	        message.setFrom("jag.javaprogram@gmail.com");
    	        message.setTo(to); 
    	        message.setSubject(subject); 
    	        message.setText(text);
    	        emailSender.send(message);
    	        
    	    }
}





package com.empower.demo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.empower.demo.email.EmailSender;

@RestController
public class MyController {
	@Autowired
	private EmailSender email;

	
	
	@GetMapping("/sendemail")
	public String sendEmail(@RequestParam String to, @RequestParam String subject, @RequestParam String body)
	{
		email.sendSimpleMessage(to, subject, body);
		return "Email sent";
	}
}


-------------------------
ReactJs + Spring boot Rest + JWT




    accessAdminHome()
    {
        var token=this.getToken();        
        return axios.get(this.URL+"/admin/adminProfile", { headers: {"Authorization":`Bearer ${token}`}});
    }

    getToken() {
        var token = '';
        token = localStorage.getItem("token");
        return token;
    }


-----------------------------------------------------------
How to use image in react + spring rest
---------------------------------------------
Last time we used byte[]
lets try with String instead of byte[]

what String?
	Base64 encoded string



Product
	id
	name
	category
	picture
	mfd

Refer to
	image-demo	for backend
	react-image-demo fro frontend

in github
	empower2024
